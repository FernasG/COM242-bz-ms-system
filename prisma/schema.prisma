// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(uuid())
  name                String
  email               String    @unique
  cellphone           String
  password_hash       String
  register            String    @unique
  balance             Int       @default(0)
  points_gamefication Int       @default(0)
  created_at          DateTime  @default(now())
  updated_at          DateTime?
  deleted_at          DateTime?

  role      Role        @relation(fields: [role_id], references: [id])
  role_id   String
  Vehicle   Vehicle[]
  Blacklist Blacklist[]
  Street    Street?     @relation(fields: [streetId], references: [id])
  streetId  String?

  @@map("users")
}

model Role {
  id   String @id @default(uuid())
  name String
  User User[]

  @@map("roles")
}

model Vehicle {
  id           String @id @default(uuid())
  plate        String @unique
  model        String
  color        String
  manufacturer String

  user            User              @relation(fields: [user_id], references: [id])
  user_id         String
  Parking_Session Parking_Session[]

  @@map("vehicles")
}

model Blacklist {
  id      String @id @default(uuid())
  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("blacklist")
}

model Street {
  id           String    @id @default(uuid())
  name         String
  neighborhood String
  qrcode_url   String    @unique
  vacancies    Int
  hour_price   Float     @default(3)
  created_at   DateTime  @default(now())
  updated_at   DateTime?

  Users           User[]
  Parking_Session Parking_Session[]

  @@map("streets")
}

model Parking_Session {
  id          String    @id @default(uuid())
  entry_time  DateTime
  hours       Float?
  total_price Int?
  hour_price  Float
  created_at  DateTime  @default(now())
  updated_at  DateTime?

  street     Street  @relation(fields: [street_id], references: [id])
  street_id  String
  vehicle    Vehicle @relation(fields: [vehicle_id], references: [id])
  vehicle_id String

  @@map("parking_sessions")
}
